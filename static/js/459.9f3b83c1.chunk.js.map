{"version":3,"file":"static/js/459.9f3b83c1.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBF,IAAAA,IAAA,oCAAuCC,IADzD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,uFACkBP,IAAAA,IAAA,gCACIC,EADJ,kBACqBM,IAFvC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,uFACkBT,IAAAA,IAAA,iBAAoBS,EAApB,oBAAkCR,IADpD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAA+BD,GAA/B,uFACkBT,IAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,uFACkBT,IAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,oE,6GC7BP,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oB,SCI7D,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOL,EAAP,KAAaM,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAgBI,GAASK,KAAKF,KAC7B,CAACH,KAGF,8BACGH,EAAKS,QACJ,eAAIC,UAAWC,EAAf,SACGX,EAAKY,KACJ,SAACC,GAAD,OACEA,EAAQC,eACN,gBAAIJ,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXI,IAAG,yCAAoCF,EAAQC,cAC/CE,IAAKH,EAAQI,QAEf,wBAAKJ,EAAQI,QACb,uBAAIJ,EAAQK,cAPcL,EAAQf,UAa5C","sources":["API/Api.jsx","webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"fe6dc393810702cab99031f1eed25696\";\r\n\r\n//--список самых популярных фильмов--//\r\nexport async function fetchTrendingMovies() {\r\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\r\n  return response.data.results;\r\n}\r\n//--поиск кинофильма по ключевому слову--//\r\nexport async function fetchMoviesSearch(searchQuery) {\r\n  const response = await axios.get(\r\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}`\r\n  );\r\n  return response.data.results;\r\n}\r\n//--полная информация о фильме--//\r\nexport async function fetchMoviesById(id) {\r\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\r\n  return response.data;\r\n}\r\n//--информация о актёрском составе--//\r\nexport async function fetchMoviesCast(id) {\r\n  const response = await axios.get(\r\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n}\r\n//--запрос обзоров для страницы кинофильма--//\r\nexport async function fetchReviews(id) {\r\n  const response = await axios.get(\r\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.results;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__H-f4+\",\"item\":\"Cast_item__368cd\",\"image\":\"Cast_image__xwSc4\"};","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchMoviesCast } from \"../../API/Api\";\r\nimport s from \"./Cast.module.css\";\r\n\r\nexport default function Cast() {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMoviesCast(movieId).then(setCast);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {cast.length ? (\r\n        <ul className={s.list}>\r\n          {cast.map(\r\n            (element) =>\r\n              element.profile_path && (\r\n                <li className={s.item} key={element.id}>\r\n                  <img\r\n                    className={s.image}\r\n                    src={`https://image.tmdb.org/t/p/w200${element.profile_path}`}\r\n                    alt={element.name}\r\n                  />\r\n                  <h3>{element.name}</h3>\r\n                  <p>{element.character}</p>\r\n                </li>\r\n              )\r\n          )}\r\n        </ul>\r\n      ) : (\r\n        <p>There is no information about the cast.</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMoviesSearch","searchQuery","fetchMoviesById","id","fetchMoviesCast","cast","fetchReviews","Cast","movieId","useParams","useState","setCast","useEffect","then","length","className","s","map","element","profile_path","src","alt","name","character"],"sourceRoot":""}