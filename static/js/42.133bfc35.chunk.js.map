{"version":3,"file":"static/js/42.133bfc35.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBF,IAAAA,IAAA,oCAAuCC,IADzD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,uFACkBP,IAAAA,IAAA,gCACIC,EADJ,kBACqBM,IAFvC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,uFACkBT,IAAAA,IAAA,iBAAoBS,EAApB,oBAAkCR,IADpD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAA+BD,GAA/B,uFACkBT,IAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,uFACkBT,IAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,oE,0IC7BP,EAAyB,iCAAzB,EAAiE,+BAAjE,EAAwG,gCAAxG,EAAgJ,gCAAhJ,EAAyL,iCAAzL,EAAqO,mC,SCYtN,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,OAA0BI,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IAEXlB,EAAAA,EAAAA,IAAgBM,GACbc,MAAK,SAACL,GACLC,EAASD,GACTG,GAAW,MAEZG,OAAM,SAACC,IACNC,EAAAA,EAAAA,IAAM,GAAD,OAAID,IACTJ,GAAW,QAEd,CAACZ,IAUJ,OACE,iCACE,mBAAQkB,UAAWC,EAAUC,KAAK,SAASC,QAVhC,WACbnB,EACEE,EAASkB,MAAT,UACOlB,EAASkB,MAAMC,KAAKC,UAD3B,OACsCpB,EAASkB,MAAMC,KAAKE,QACtD,YAMJ,sBAGA,kBACCd,IAAW,SAACe,EAAA,EAAD,IACXjB,IACC,iCACE,iBAAKS,UAAWC,EAAhB,WACE,gBACEQ,IAAG,yCAAoClB,EAAMmB,aAC7CC,IAAKpB,EAAMqB,SAEb,4BACE,wBAAKrB,EAAMqB,MAAQrB,EAAMqB,MAAQrB,EAAMsB,QACvC,wCAAqC,GAArBtB,EAAMuB,aAAtB,QACA,sCACA,uBAAIvB,EAAMwB,YACV,mCACCxB,EAAMyB,QACLzB,EAAMyB,OAAOC,KAAI,SAACC,GAAD,OACf,iBAAMlB,UAAWC,EAAjB,SACGiB,EAAML,MADsBK,EAAMzC,cAM7C,mBAEA,eAAIuB,UAAWC,EAAf,sCACA,SAAC,KAAD,CACEkB,GAAE,OACFf,MAAOlB,EAASkB,MAAQ,CAAEC,KAAMnB,EAASkB,MAAMC,MAAS,KACxDL,UAAW,qBAAGoB,SAA2BnB,EAAWA,GAHtD,mBAOA,SAAC,KAAD,CACEkB,GAAE,UACFf,MAAOlB,EAASkB,MAAQ,CAAEC,KAAMnB,EAASkB,MAAMC,MAAS,KACxDL,UAAW,qBAAGoB,SAA2BnB,EAAWA,GAHtD,sBAQA,SAAC,EAAAoB,SAAD,CAAUC,UAAU,SAACd,EAAA,EAAD,IAApB,UACE,SAAC,KAAD","sources":["API/Api.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"fe6dc393810702cab99031f1eed25696\";\r\n\r\n//--список самых популярных фильмов--//\r\nexport async function fetchTrendingMovies() {\r\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\r\n  return response.data.results;\r\n}\r\n//--поиск кинофильма по ключевому слову--//\r\nexport async function fetchMoviesSearch(searchQuery) {\r\n  const response = await axios.get(\r\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}`\r\n  );\r\n  return response.data.results;\r\n}\r\n//--полная информация о фильме--//\r\nexport async function fetchMoviesById(id) {\r\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\r\n  return response.data;\r\n}\r\n//--информация о актёрском составе--//\r\nexport async function fetchMoviesCast(id) {\r\n  const response = await axios.get(\r\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n}\r\n//--запрос обзоров для страницы кинофильма--//\r\nexport async function fetchReviews(id) {\r\n  const response = await axios.get(\r\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.results;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetailsPage_button__Bfx7m\",\"card\":\"MovieDetailsPage_card__D1r3o\",\"genre\":\"MovieDetailsPage_genre__8emlQ\",\"title\":\"MovieDetailsPage_title__64App\",\"active\":\"MovieDetailsPage_active__wnmMZ\",\"inactive\":\"MovieDetailsPage_inactive__UFR7y\"};","import { useState, useEffect, Suspense } from \"react\";\r\nimport {\r\n  useParams,\r\n  useLocation,\r\n  useNavigate,\r\n  NavLink,\r\n  Outlet,\r\n} from \"react-router-dom\";\r\nimport { fetchMoviesById } from \"../../API/Api\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport s from \"./MovieDetailsPage.module.css\";\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  console.log(location);\r\n  const [movie, setMovie] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    fetchMoviesById(movieId)\r\n      .then((movie) => {\r\n        setMovie(movie);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        toast(`${error}`);\r\n        setLoading(false);\r\n      });\r\n  }, [movieId]);\r\n\r\n  const goBack = () => {\r\n    navigate(\r\n      location.state\r\n        ? `${location.state.from.pathname}${location.state.from.search}`\r\n        : \"/movies\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className={s.button} type=\"button\" onClick={goBack}>\r\n        Go back\r\n      </button>\r\n      <br />\r\n      {loading && <Loader />}\r\n      {movie && (\r\n        <>\r\n          <div className={s.card}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\r\n              alt={movie.title}\r\n            />\r\n            <div>\r\n              <h2>{movie.title ? movie.title : movie.name}</h2>\r\n              <p>User score: {movie.vote_average * 10}%</p>\r\n              <h3>Overview</h3>\r\n              <p>{movie.overview}</p>\r\n              <h3>Genres</h3>\r\n              {movie.genres &&\r\n                movie.genres.map((genre) => (\r\n                  <span className={s.genre} key={genre.id}>\r\n                    {genre.name}\r\n                  </span>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          <h3 className={s.title}> Additional information</h3>\r\n          <NavLink\r\n            to={`cast`}\r\n            state={location.state ? { from: location.state.from } : null}\r\n            className={({ isActive }) => (isActive ? s.active : s.inactive)}\r\n          >\r\n            Cast\r\n          </NavLink>\r\n          <NavLink\r\n            to={`reviews`}\r\n            state={location.state ? { from: location.state.from } : null}\r\n            className={({ isActive }) => (isActive ? s.active : s.inactive)}\r\n          >\r\n            Reviews\r\n          </NavLink>\r\n\r\n          <Suspense fallback={<Loader />}>\r\n            <Outlet />\r\n          </Suspense>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMoviesSearch","searchQuery","fetchMoviesById","id","fetchMoviesCast","cast","fetchReviews","MovieDetailsPage","movieId","useParams","navigate","useNavigate","location","useLocation","console","log","useState","movie","setMovie","loading","setLoading","useEffect","then","catch","error","toast","className","s","type","onClick","state","from","pathname","search","Loader","src","poster_path","alt","title","name","vote_average","overview","genres","map","genre","to","isActive","Suspense","fallback"],"sourceRoot":""}